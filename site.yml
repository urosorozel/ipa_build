---
- name: Install base python
  hosts: ipa
  user: ubuntu
  gather_facts: false
  environment:
    "{{ proxy_env }}"

  vars:
    jenkins_build_number: "{{ lookup('env','BUILD_NUMBER') | default(default_jenkins_build_number, True }}"
    dib_debug: "{{ lookup('env','DIB_DEBUG') | default(default_dib_debug, True }}"
    ipa_strategy: "{{ lookup('env', 'IPA_STRATEGY') | default(default_ipa_strategy, True) }}"
    ubuntu_release: "{{ lookup('env','DIB_RELEASE') | default(default_ubuntu_release, True) }}"
    dib_include_elements: "ubuntu ironic-agent  proliant-tools ilo baremetal devuser"
    dib_environment:
      DIB_DEV_USER_SHELL: /bin/bash
      DIB_DEV_USER_USERNAME: devuser
      DIB_DEV_USER_PASSWORD: devuser
      DIB_DEV_USER_PWDLESS_SUDO: yes
      DIB_RELEASE: "{{ ubuntu_release }}"
      DIB_DEBUG_TRACE: "{{ dib_debug }}"

  pre_tasks:
  - name: Install python2 for Ansible
    raw: bash -c "test -e /usr/bin/python || ( export http_proxy={{proxy_env.http_proxy}};apt -qqy update && apt install -qqy python-minimal python2.7)"
    register: output
    changed_when:
    - output.stdout != ""
    - output.stdout != "\r\n"
  - name: Gathering Facts
    setup:

  tasks:
  - name: Create a new file for APT config
    file: path=/etc/apt/apt.conf.d/10disable-auto-apt  state=touch

  - name: Disable Automatic APT
    lineinfile:
      dest: /etc/apt/apt.conf.d/10disable-auto-apt
      line: 'APT::Periodic::Enable "0";'
      state: present

  - name: Add proxy settings
    lineinfile:
      path: /etc/environment
      regexp: '^http_proxy='
      line: 'http_proxy={{ proxy_env.http_proxy }}'
    when: proxy_env and proxy_env.http_proxy

  - name: Add proxy settings
    lineinfile:
      path: /etc/environment
      regexp: '^https_proxy='
      line: 'https_proxy={{ proxy_env.https_proxy }}'
    when: proxy_env and proxy_env.https_proxy

  - name: Install required packages
    apt:
      name: "{{ item }}"
      update_cache: yes
    with_items:
      - python-pip
      - qemu-utils

  - name: Install PIP virtualenv
    pip:
      name: virtualenv
  - name: Create venv

    shell: |
       virtualenv dib
    become_user: ubuntu
    args:
      creates: ~/dib

#  - name: Clone DIB
#    git:
#      repo: "https://git.openstack.org/openstack/diskimage-builder"
#      dest: ~/dib/diskimage-builder
#    become_user: ubuntu

#  - name: Run PIP
#    shell: |
#      source bin/activate
#      cd ~/dib/diskimage-builder
#      pip install -e .
#    args:
#      chdir: ~/dib
#    become_user: ubuntu

  - name: Install diskimage-builder
    pip:
      name: diskimage-builder
      virtualenv: ~/dib
    become_user: ubuntu


  - name: Create static include
    file:
      dest:  ~/dib/lib/python2.7/site-packages/diskimage_builder/elements/ironic-agent/static/bin
      state: directory
    become_user: ubuntu

  - name: Include lacp bond hack with static ip configuration
    include: static_lacp_bond_ipa.yml
    when: ipa_strategy == "static"

  - name: Create image
    shell: |
      source ~/dib/bin/activate
      disk-image-create -a amd64 -o ubuntu-amd64-{{ ubuntu_release }}.qcow2 --logfile build.log {{ dib_include_elements }} {% if ipa_strategy == 'dhcp' %} dhcp-all-interfaces{% endif %}
    environment: "{{ dib_environment }}"
    args:
      chdir: ~/
      executable: /bin/bash
    become_user: ubuntu

  - name: Fetch images ramdisk
    fetch:
      src: ubuntu-amd64-{{ ubuntu_release }}.initramfs
      dest: "/data/ipa_images/{{ jenkins_build_number }}_ubuntu-amd64-{{ ubuntu_release }}.initramfs"
      flat: yes

  - name: Fetch images kernel
    fetch:
      src: ubuntu-amd64-{{ ubuntu_release }}.kernel
      dest: "/data/ipa_images/{{ jenkins_build_number }}_ubuntu-amd64-{{ ubuntu_release }}.kernel"
      flat: yes

  - name: Fetch build.log
    fetch:
      src: build.log
      dest: "{{ jenkins_build_number }}_build.log"
      flat: yes
